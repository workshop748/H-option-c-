namespace Malware
{
    public class Graph
    {
        public static async Task<List<Edge>> BFSAsync(string spaths)
        {
            var results = new List<Edge>();
            var queue = new Queue<string>();

            queue.Enqueue(spaths);
            while (queue.Count > 0)
            {
string currentPath = queue.Dequeue();
                DirectoryInfo directoryInfo = new DirectoryInfo(currentPath);
                try
                {
                    DirectoryInfo filesystemInfos = await Task.Run(() => directoryInfo.GetFileSystemInfos(spaths));
                    bool hasASubdirectory = false;
                    foreach (DirectoryInfo fileSystemInfo in filesystemInfos)
                    {
                        var edge = new Edge(fileSystemInfo.name, fileSystemInfo is DirectoryInfo, fileSystemInfo.FullName);
                        results.Add(edge);

                        if (fileSystemInfo is DirectoryInfo)
                        {
                            hasASubdirectory = true;
                            queue.Enqueue(fileSystemInfo.FullName);
                        }
                    }
                }
                catch (UnauthorizedAccessException)
                {
                }
                catch (Exception ex)
                {
                }
            }
            return results;
        }

        


    }
}
